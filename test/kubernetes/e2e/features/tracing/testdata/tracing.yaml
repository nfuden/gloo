# gloo resources
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: echo-server
spec:
  # useHttp2: true
  kube:
    selector:
      app.kubernetes.io/name: http-echo
    serviceName: http-echo
    serviceNamespace: http-echo
    servicePort: 3000
---
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: "opentelemetry-collector"
  namespace: default
spec:
  # OpenTelemetry collector requires HTTP/2:
  # https://github.com/open-telemetry/opentelemetry-collector/issues/1916
  useHttp2: true
  kube:
    selector:
      app.kubernetes.io/name: otel-collector
    serviceName: otel-collector
    serviceNamespace: default
    servicePort: 4317
---
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: default
  labels:
    gateway-type: tracing
spec:
  virtualHost:
    domains:
    - '*'
    options:
      stagedTransformations:
        regular:
          requestTransforms:
            - requestTransformation:
                transformationTemplate:
                  headers:
                    test_header:
                      text: test_value
                  spanTransformer:
                    name:
                      text: '{{header("Host")}}'
    routes:
    - matchers:
       - prefix: /path/without/route/descriptor
      routeAction:
        single:
          upstream:
            name: echo-server
            namespace: default
      options:
        autoHostRewrite: true
    - matchers:
       - prefix: /path/with/route/descriptor
      routeAction:
        single:
          upstream:
            name: echo-server
            namespace: default
      options:
        autoHostRewrite: true
        tracing:
          routeDescriptor: THISISAROUTEDESCRIPTOR
---
# Avoid using the default gateway because we don't want to destroy it when this
# test is over - that will break other tests that depend on the default gateway
# existing.
apiVersion: gateway.solo.io/v1
kind: Gateway
metadata:
  labels:
    app: gloo
    app.kubernetes.io/name: gateway-proxy-tracing
  name: gateway-proxy-tracing
  namespace: gloo-gateway-edge-test
spec:
  bindAddress: '::'
  bindPort: 18080
  proxyNames:
    - gateway-proxy
  httpGateway:
    virtualServiceSelector:
      gateway-type: tracing
    options:
      httpConnectionManagerSettings:
        tracing:
          openTelemetryConfig:
            collectorUpstreamRef:
              name: opentelemetry-collector
              namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-proxy-tracing
  namespace: gloo-gateway-edge-test
  labels:
    app.kubernetes.io/name: gateway-proxy-tracing-service
spec:
  ports:
  - name: gateway-proxy-tracing
    port: 18080
    protocol: TCP
    targetPort: 18080
  selector:
    gateway-proxy: live
    gateway-proxy-id: gateway-proxy
